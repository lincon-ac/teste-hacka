name: Backend CD

on:
  workflow_run:
    workflows: ["Backend CI"]
    types:
      - completed
    branches:
      - main

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/app-backend
  K8S_NAMESPACE: production

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Create namespace if not exists
        run: |
          kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Update Kubernetes manifests
        run: |
          cd infra/k8s
          sed -i "s|image: backend-api:latest|image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}|g" deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f infra/k8s/configmap.yaml -n ${{ env.K8S_NAMESPACE }}
          kubectl apply -f infra/k8s/deployment.yaml -n ${{ env.K8S_NAMESPACE }}
          kubectl apply -f infra/k8s/service.yaml -n ${{ env.K8S_NAMESPACE }}

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/backend-api -n ${{ env.K8S_NAMESPACE }} --timeout=180s

      - name: Cleanup old ReplicaSets
        run: |
          kubectl delete rs -n ${{ env.K8S_NAMESPACE }} -l app=backend-api --field-selector status.replicas=0
